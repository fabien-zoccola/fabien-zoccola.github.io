import{F as e}from"./formatter-21eb8d7f.js";import{t,w as i}from"./index-fe8be053.js";const r="long",a="short",o="numeric",n={a:(e,t)=>(new Intl.DateTimeFormat(t,{hour:o}).format(e).split(" ")[1]||"").toLowerCase(),ss:(e,t)=>new Intl.DateTimeFormat(t,{minute:"2-digit",second:"2-digit"}).format(e).split(":")[1].toLowerCase(),s:{second:o},mm:(e,t)=>new Intl.DateTimeFormat(t,{hour:"2-digit",minute:"2-digit"}).format(e).split(":")[1].split(" ")[0].toLowerCase(),m:{minute:o},hh:(e,t)=>new Intl.DateTimeFormat(t,{hour:"2-digit"}).format(e).split(/\s/)[0].toLowerCase(),h:(e,t)=>new Intl.DateTimeFormat(t,{hour:o}).format(e).split(/\s/)[0].toLowerCase(),DD:{day:"2-digit"},D:{day:o},dddd:{weekday:r},ddd:{weekday:a},dd:{weekday:"narrow"},MMMM:{month:r},MMM:{month:a},MM:{month:"2-digit"},M:{month:o},YYYY:{year:o},YY:{year:"2-digit"}},m={weekday:[[r,a,"narrow"],a],era:[[r,a,"narrow"],a],year:[[o,"2-digit"],o],month:[[o,"2-digit",r,a,"narrow"],r],day:[[o,"2-digit"],o],hour:[[o,"2-digit"],"2-digit"],minute:[[o,"2-digit"],"2-digit"],second:[[o,"2-digit"],"2-digit"],dayperiod:[["narrow",a,r],a,"dayPeriod"],calendar:[["buddhist","chinese","coptic","ethiopia","ethiopic","gregory","hebrew","indian","islamic","iso8601","japanese","persian","roc"]],system:[["arab","arabext","bali","beng","deva","fullwide","gujr","guru","hanidec","khmr"," knda","laoo","latn","limb","mlym","mong","mymr","orya","tamldec"," telu","thai","tibt"]],date:[["full",r,"medium",a],"medium","dateStyle"],time:[["full",r,"medium",a],"medium","timeStyle"],zone:[[r,a],null,"timeZoneName"],hourcycle:[["h11","h12","h23","h24","auto"],"auto","hourCycle"]};function d(e,r,a){e=e||new Date;const o=null!=a.fallback?a.fallback:t?"Invalid":"â€“";if(!(e instanceof Date))if("now"===e)e=new Date;else{if(null==e)return o;e=new Date(e)}const l=e.getTime();if(l!=l)return o;if(a.format){let t=a.format;return t=t.replace(/\w+/gi,(t=>{const i=n[t];return i?"function"==typeof i?i(e,r):d(e,r,i):t})),t.trim()}const s=Object.entries(m).reduce(((e,[r,o])=>{const n=o[2]||r,m=o[1],d=a[r];return o=o[0],""===d&&m?e[n]=m:d&&(o.includes(d)?e[n]=d:t&&i(`datetime: wrong value for "${r}":`,JSON.stringify(d))),e}),{});a.timezone&&(s.timeZone=a.timezone),a.hourcycle&&"auto"!==a.hourcycle&&(s.hourCycle=a.hourcycle);const u=new Intl.DateTimeFormat(r,s);try{return u.format(e)}catch(e){return i("number format error",e),o}}export default class extends e{static get formatter(){return d}constructor(e,t){super(e,t),this.intervalId=null}apply(){super.apply(),clearInterval(this.intervalId),"now"===this.value&&(this.intervalId=setInterval((()=>{this.apply()}),1e3))}}
